[{"/Users/ammonburgi/personal-projects/elevate-solar/src/index.js":"1","/Users/ammonburgi/personal-projects/elevate-solar/src/App.js":"2","/Users/ammonburgi/personal-projects/elevate-solar/src/reportWebVitals.js":"3","/Users/ammonburgi/personal-projects/elevate-solar/src/routes.js":"4","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/HowItWorks/HowItWorks.js":"5","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Careers/Careers.js":"6","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Science/Science.js":"7","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Landing/Landing.js":"8","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Talk/Talk.js":"9","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Header/Header.js":"10","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Footer/Footer.js":"11","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Book/Book.js":"12","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/ConfirmBooking/ConfirmBooking.js":"13","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/PageNotFound/PageNotFound.js":"14"},{"size":581,"mtime":1610407170704,"results":"15","hashOfConfig":"16"},{"size":447,"mtime":1612584731669,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1610073251091,"results":"18","hashOfConfig":"16"},{"size":989,"mtime":1615421520542,"results":"19","hashOfConfig":"16"},{"size":5534,"mtime":1615266526522,"results":"20","hashOfConfig":"16"},{"size":5905,"mtime":1615266323013,"results":"21","hashOfConfig":"16"},{"size":9843,"mtime":1615266504366,"results":"22","hashOfConfig":"16"},{"size":9136,"mtime":1615266517051,"results":"23","hashOfConfig":"16"},{"size":17031,"mtime":1615266490485,"results":"24","hashOfConfig":"16"},{"size":5095,"mtime":1613596307870,"results":"25","hashOfConfig":"16"},{"size":1155,"mtime":1610783746332,"results":"26","hashOfConfig":"16"},{"size":4597,"mtime":1615266480124,"results":"27","hashOfConfig":"16"},{"size":6598,"mtime":1615420509709,"results":"28","hashOfConfig":"16"},{"size":422,"mtime":1615422195925,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1kr8zbn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ammonburgi/personal-projects/elevate-solar/src/index.js",[],["64","65"],"/Users/ammonburgi/personal-projects/elevate-solar/src/App.js",["66","67"],"import React, {useEffect, useState} from 'react'\nimport routes from './routes'\nimport {withRouter} from 'react-router-dom'\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\nimport './App.css';\n\nfunction App(){\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className='app-component'>\n        {routes}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","/Users/ammonburgi/personal-projects/elevate-solar/src/reportWebVitals.js",[],"/Users/ammonburgi/personal-projects/elevate-solar/src/routes.js",[],"/Users/ammonburgi/personal-projects/elevate-solar/src/Components/HowItWorks/HowItWorks.js",[],"/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Careers/Careers.js",["68"],"import React, {useState, useEffect} from 'react'\nimport {Helmet} from 'react-helmet'\nimport axios from 'axios'\n\nimport './careers.css'\nimport solarIcon from '../../logo_transparent_background.webp'\n\nfunction Careers(){\n    const [fadeToggle, setFadeToggle] = useState(false),\n        [name, setName] = useState(''),\n        [email, setEmail] = useState(''),\n        [phone, setPhone] = useState(''),\n        [address, setAddress] = useState(''),\n        [about, setAbout] = useState(''),\n        [nameErr, setNameErr] = useState(false),\n        [emailErr, setEmailErr] = useState(false),\n        [phoneErr, setPhoneErr] = useState(false),\n        [addressErr, setAddressErr] = useState(false),\n        [aboutErr, setAboutErr] = useState(false),\n        [resumeFile, setResumeFile] = useState(null),\n        [baseFile64, setBaseFile64] = useState('')\n\n    useEffect(() => {\n        window.scrollTo(0,0)\n        const timer = setTimeout(() => {\n          setFadeToggle(true)\n        }, 100);\n        return () => clearTimeout(timer)\n      }, [])\n\n    const encodeFileBase = (file) => {\n        console.log(resumeFile[0])\n        const reader = new FileReader();\n        if(file){\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                const base64 = reader.result;\n                setBaseFile64(base64)\n            };\n            reader.onerror = (error) => {\n                console.log(error)\n            }\n        }\n    }\n\n    const handleApply = async () => {\n        const resumeType = resumeFile.type,\n            resumeName = resumeFile.name\n\n        encodeFileBase(resumeFile)\n        setNameErr(false)\n        setEmailErr(false)\n        setPhoneErr(false)\n        setAddressErr(false)\n        setAboutErr(false)\n\n        if(name.length === 0){\n           return setNameErr(true)\n        }\n        if(email.length === 0){\n            return setEmailErr(true)\n        }\n        if(phone.length === 0){\n            return setPhoneErr(true)\n        }\n        if(address.length === 0){\n            return setAddressErr(true)\n        }\n        if(about.length === 0){\n            return setAboutErr(true)\n        }\n        console.log(baseFile64)\n        axios.post('/api/mail/career', {name, email, phone, address, about, baseFile64, resumeName, resumeType})\n        .then(res => console.log(res.data.response))\n        .catch(err => console.log(err))\n\n    }\n\n    return (\n        <div className={fadeToggle === false ? 'no-career' : 'career-component'}>\n            <Helmet>\n                <title>Elevate Solar | Careers</title>\n                <meta name='description' content='Want a career in the solar industry? Apply at Elevate Solar Energy today!' />\n            </Helmet>\n            <div className='apply-form'>\n                <div className='apply-header'>\n                    <p>Apply Today!</p>\n                    <img alt='elevate-solar-icon' src={solarIcon} />\n                </div>\n                <nav>\n                    <div className='apply-input-wrapper'>\n                        <input \n                        className={name.length === 0 ? 'apply-input' : 'fill-input'}\n                        onChange={(e) => setName(e.target.value)} \n                        placeholder='Name' />\n                        <p className={nameErr === true ? 'input-error' : 'no-error'}>Name is Invalid!</p>\n                    </div>\n                    <div className='apply-input-wrapper'>\n                        <input \n                        className={email.length === 0 ? 'apply-input' : 'fill-input'}\n                        value={email} \n                        onChange={(e) => setEmail(e.target.value)} \n                        placeholder='Email' />\n                        <p className={emailErr === true ? 'input-error' : 'no-error'}>Email is Invalid!</p>\n                    </div>\n                </nav>\n                <nav>\n                    <div className='apply-input-wrapper'>\n                        <input \n                        className={phone.length === 0 ? 'apply-input' : 'fill-input'}\n                        value={phone}\n                        onChange={(e) => setPhone(e.target.value)} \n                        placeholder='Phone' />\n                        <p className={phoneErr === true ? 'input-error' : 'no-error'}>Invalid Phone Number!</p>\n                    </div>\n                    <div className='apply-input-wrapper'>\n                        <input\n                        className={address.length === 0 ? 'apply-input' : 'fill-input'}\n                        value={address} \n                        onChange={(e) => setAddress(e.target.value)} \n                        placeholder='Address' />\n                        <p className={addressErr === true ? 'input-error' : 'no-error'}>Invalid Address!</p>\n                    </div>\n                </nav>\n                <textarea\n                className={about.length === 0 ? 'text-area' : 'fill-text-area'}\n                placeholder='Cover Letter For Sales Rep Position...'\n                onChange={(e) => setAbout(e.target.value)}\n                value={about}\n                />\n                <div className='apply-button-wrapper'>\n                    <div className='full-resume-wrapper'>\n                        <nav className='resume-wrapper'>\n                            <button className='fake-file-button'>Resume:</button>\n                            <input onChange={(e) => setResumeFile(e.target.files[0])} className='attach-file-button' type='file' />\n                        </nav>\n                        <p className='file-name'>{resumeFile !== null ? resumeFile.name : null}</p>\n                    </div>\n                    <button \n                    className='apply-button'\n                    onClick={handleApply}>Apply Now</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Careers","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Science/Science.js",[],"/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Landing/Landing.js",[],"/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Talk/Talk.js",["69","70"],"import React, {useEffect, useState} from 'react';\nimport {Helmet} from 'react-helmet';\n\nimport './talk.css'\nimport solarIcon from '../../logo_transparent_background.webp';\nimport solarInstal from '../../Solar Panel Installation (1).webp';\nimport solarPanels from '../../Solar Panels on Roof.webp';\nimport axios from 'axios';\n\nfunction Talk(){\n    const [fadeToggle, setFadeToggle] = useState(false),\n        [first, setFirst] = useState(''),\n        [last, setLast] = useState(''),\n        [firstStreet, setFirstStreet] = useState(''),\n        [secondStreet, setSecondStreet] = useState(''),\n        [city, setCity] = useState(''),\n        [region, setRegion] = useState(''),\n        [zip, setZip] = useState(''),\n        [country, setCountry] = useState(''),\n        [email, setEmail] = useState(''),\n        [homeOwner, setHomeOwner] = useState(''),\n        [howHear, setHowHear] = useState(''),\n        [phone, setPhone] = useState(''),\n        [firstError, setFirstError] = useState(false),\n        [lastError, setLastError] = useState(false),\n        [firstStreetError, setFirstStreetError] = useState(false),\n        [secondStreetError, setSecondStreetError] = useState(false),\n        [cityError, setCityError] = useState(false),\n        [regionError, setRegionError] = useState(false),\n        [zipError, setZipError] = useState(false),\n        [countryError, setCountryError] = useState(false),\n        [emailError, setEmailError] = useState(false),\n        [homeOwnerError, setHomeOwnerError] = useState(false),\n        [phoneError, setPhoneError] = useState(false)\n\n    useEffect(() => {\n        window.scrollTo(0,0)\n        const timer = setTimeout(() => {\n          setFadeToggle(true)\n        }, 100);\n        return () => clearTimeout(timer)\n      }, [])\n\n\n    const countryList = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua &amp; Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia &amp; Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin Islands\",\"Brunei\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Cape Verde\",\"Cayman Islands\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cruise Ship\",\"Cuba\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kuwait\",\"Kyrgyz Republic\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Namibia\",\"Nepal\",\"Netherlands\",\"Netherlands Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"Norway\",\"Oman\",\"Pakistan\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre &amp; Miquelon\",\"Samoa\",\"San Marino\",\"Satellite\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"South Africa\",\"South Korea\",\"Spain\",\"Sri Lanka\",\"St Kitts &amp; Nevis\",\"St Lucia\",\"St Vincent\",\"St. Lucia\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor L'Este\",\"Togo\",\"Tonga\",\"Trinidad &amp; Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks &amp; Caicos\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\", \"United States\", \"Uruguay\",\"Uzbekistan\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];\n\n    const countryMap = countryList.map((element, index) => {\n        return (\n            <option key={index} value={element}>{element}</option>\n        )\n    })\n\n    const handleQuoteForm = () => {\n\n        setFirstError(false)\n        setLastError(false)\n        setFirstStreet(false)\n        setSecondStreetError(false)\n        setCityError(false)\n        setRegionError(false)\n        setZipError(false)\n        setCountryError(false)\n        setEmailError(false)\n        setHomeOwnerError(false)\n        setPhoneError(false)\n\n        if(first.length === 0){\n            return setFirstError(true)\n        }\n        if(last.length === 0) {\n            return setLastError(true)\n        }\n        if(firstStreet.length === 0) {\n            return setFirstStreet(true)\n        }\n        if(secondStreet.length === 0 ){\n            return setSecondStreetError(true)\n        }\n        if(city.length === 0){\n            return setCityError(true)\n        }\n        if(region.length === 0){\n            return setRegionError(true)\n        }\n        if(zip.length === 0){\n            return setZipError(true)\n        }\n        if(country.length === 0){\n            return setCountryError(true)\n        }\n        if(email.length === 0){\n            return setEmailError(true)\n        }\n        if(homeOwner.length === 0){\n            return setHomeOwnerError(true)\n        }\n        if(phone.length === 0){\n            return setPhoneError(true)\n        }\n\n        axios.post('/api/mail/quote', {first, last, firstStreet, secondStreet, city, region, zip, country, email, homeOwner, howHear, phone})\n        .then(res => console.log(res.data.response))\n        .catch(err => console.log(err))\n    }\n\n    return (\n        <div className={fadeToggle === false ? 'no-talk' : 'talk-component'}>\n            <Helmet>\n                <title>Elevate Solar | Talk To Someone</title>\n                <meta name='description' content='Get a Quote today! Fill out some details and we at Elevate Solar Energy will contact you shortly.' />\n            </Helmet>\n            <div className='talk-top-section'>\n                <div className='talk-top-first'>\n                    <nav className='talk-first-text'>\n                        <p id='talk-first-last-title'>Designed For You!</p>\n                        <p>When it comes to solar panel installation, it’s always good to have a plan. That’s because your energy needs are different than your neighbor’s. Your budget is also different. Even your roof is different. At Elevate Solar, we aren’t just a solar panel installation company. We work with each customer to design a solar energy system tailored to their energy needs.</p>\n                    </nav>\n                    <img src={solarInstal} alt='Solar-Panel-Installation' />\n                </div>\n                <div className='talk-top-last'>\n                    <img src={solarPanels} alt='Solar-Panels' />\n                    <nav className='talk-last-text'>\n                        <p id='talk-first-last-title'>Your Unique Solar Panel Design!</p>\n                        <p>The hallmark of a good solar energy system is one that produces just enough energy throughout the year to cover your energy needs. Not too much…not too little…just right. This doesn’t just magically happen. The key is a carefully researched and developed solar panel design.</p>\n                    </nav>\n                </div>\n                <div id='hr-border'></div>\n                <section className='talk-top-text-section'>\n                    <p id='talk-text-section-title'>Here's how we do it!</p>\n                    <p id='talk-text-subtitle'>Step One: The Paperwork</p>\n                    <p>When you contact Elevate Solar and express interest in working with a solar panel installation company, the first thing we want to know is your average monthly energy usage. This number will help us determine how many solar panels you need to create that same amount of energy each month. Don’t worry if you have no clue how much energy you use each month – most homeowner don’t. In reality, your usage will fluctuate throughout the year, usually spiking in the summer months as the air conditioning is put to good use.</p>\n                    <p>To determine your energy use, we will ask you to send us a copy of your most recent utility bill, which should include a summary of energy usage for the past 12 months. This will give us a good idea of your average monthly energy usage and whether your utility company bills at tiered rates.</p>\n                    <p id='talk-text-subtitle'>Step Two: The Consultation</p>\n                    <p>Your energy usage is only one piece of the puzzle that will help our solar technicians design your personalized solar panel array. We also want to know about you. During your consultation, we will help you determine your budget and ask you about any plans for the future. Using that information our energy technician will design your personalized solar panel system and get your approval right then and there. This process allows us to speed up the solar panel installation, letting you see your savings sooner.</p>\n                    <p id='talk-text-subtitle'>Step Three: Site Assessment</p>\n                    <p>Every home and roof is unique, and a big part of crafting your solar panel design has to do with  understanding your property. Elevate Solar will send an energy technician to your home to assess your roof. The technician will make sure your roof is in good enough condition for the panels, determine the best areas of the roof that receives the most sun, and determine if things like trees are creating shade,  which could lower the efficiency of your panels.</p>\n                </section>\n            </div>\n            <div id='hr-border'></div>\n            <div className='talk-quote-form'>\n                <div className='quote-header'>\n                    <p>Get a Quote</p>\n                </div>\n                <p className='detail-text'>Please enter your details below and we'll contact you shortly.</p>\n                <div className='quote-name'>\n                    <p className='quote-label'>Name</p>\n                    <nav className='quote-input-wrapper'>\n                        <input\n                        className={first.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                        onChange={(e) => setFirst(e.target.value)}\n                        placeholder='First'\n                        />\n                        <input \n                        className={last.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                        onChange={(e) => setLast(e.target.value)}\n                        placeholder='Last' />\n                    </nav>\n                </div>\n                <p className={firstError === true ? 'quote-input-err' : 'no-error'}>Invalid First Name!</p>\n                <p className={lastError === true ? 'quote-input-err' : 'no-error'}>Invalid Last Name!</p>\n                <div className='quote-address' >\n                    <p className='quote-label'>Address</p>\n                    <input \n                    id='full-input'\n                    className={firstStreet.length === 0 ? 'quote-input' : 'filled-quote-input'} \n                    onChange={(e) => setFirstStreet(e.target.value)}\n                    placeholder='Street Address' />\n                    <input \n                    id='full-input'\n                    className={secondStreet.length === 0 ? 'quote-input' : 'filled-quote-input'} \n                    onChange={(e) => setSecondStreet(e.target.value)}\n                    placeholder='Second Street Address' />\n                    <nav className='quote-input-wrapper'>\n                        <input\n                        className={city.length === 0 ? 'quote-input' : 'filled-quote-input'} \n                        onChange={(e) => setCity(e.target.value)}\n                        placeholder='City' />\n                        <input \n                        className={region.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                        onChange={(e) => setRegion(e.target.value)}\n                        placeholder='State / Region' />\n                    </nav>\n                    <nav className='quote-input-wrapper'>\n                        <input \n                        className={zip.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                        onChange={(e) => setZip(e.target.value)}\n                        placeholder='Postal / Zip Code' />\n                        <select \n                        className={country.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                        onChange={(e) => setCountry(e.target.value)}\n                        placeholder='United States'>\n                            <option value={''}>Country</option>\n                            {countryMap}\n                        </select>\n                    </nav>\n                </div>\n                <p className={firstStreetError === true ? 'quote-input-err' : 'no-error'}>Invalid Street Address!</p>\n                <p className={secondStreetError === true ? 'quote-input-err' : 'no-error'}>Invalid Second Street Address!</p>\n                <p className={cityError === true ? 'quote-input-err' : 'no-error'}>Invalid City!</p>\n                <p className={regionError === true ? 'quote-input-err' : 'no-error'}>Invalid Region!</p>\n                <p className={zipError === true ? 'quote-input-err' : 'no-error'}>Invalid Zip!</p>\n                <p className={countryError === true ? 'quote-input-err' : 'no-error'}>Invalid Country!</p>\n                <div className='quote-email' >\n                    <p className='quote-label'>Email</p>\n                    <input\n                    id='full-input'\n                    className={email.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                    onChange={(e) => setEmail(e.target.value)}\n                    />\n                </div>\n                <p className={emailError === true ? 'quote-input-err' : 'no-error'}>Invalid Email!</p>\n                <div className='quote-homeowner'>\n                    <p id='no-margin' className='quote-label'>Homeowner?</p>\n                    <nav>\n                        <input\n                        type='radio'\n                        name='home'\n                        value={'yes'} \n                        onChange={(e) => setHomeOwner(e.target.value)}\n                        className='quote-radio-input'\n                        />\n                        <p className='quote-radio-choice'>Yes</p>\n                    </nav>\n                    <nav>\n                        <input\n                        name='home'\n                        type='radio'\n                        value={'no'}\n                        onChange={(e) => setHomeOwner(e.target.value)}\n                        className='quote-radio-input'\n                        />\n                        <p className='quote-radio-choice'>No</p>\n                    </nav>\n                    <nav>\n                        <input\n                        name='home'\n                        type='radio'\n                        value={'rent'}\n                        onChange={(e) => setHomeOwner(e.target.value)}\n                        className='quote-radio-input'\n                        />\n                        <p className='quote-radio-choice'>Rent</p>\n                    </nav>\n                </div>\n                <p className={homeOwnerError === true ? 'quote-input-err' : 'no-error'}>Are you a homeowner?</p>\n                <div className='quote-how'>\n                    <p id='no-margin' className='quote-label'>How did you hear about us?</p>\n                    <p className='quote-sub-label'>If it was in the online media, on what website was it?</p>\n                    <textarea\n                    id='quote-textarea'\n                    className={howHear.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                    onChange={(e) => setHowHear(e.target.value)}\n                    />\n                </div>\n                <div className='quote-number'>\n                    <p className='quote-label'>Phone Number</p>\n                    <input\n                    id='full-input'\n                    className={phone.length === 0 ? 'quote-input' : 'filled-quote-input'}\n                    onChange={(e) => setPhone(e.target.value)}\n                    />\n                </div>\n                <p className={phoneError === true ? 'quote-input-err' : 'no-error'}>Invalid Phone!</p>\n                <div className='quote-button'>\n                    <button onClick={handleQuoteForm} >Get Quote</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Talk","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Header/Header.js",[],"/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Footer/Footer.js",[],"/Users/ammonburgi/personal-projects/elevate-solar/src/Components/Book/Book.js",["71","72"],"import React, {useState, useEffect} from 'react';\nimport {Helmet} from 'react-helmet';\nimport Calender from 'react-calendar';\nimport axios from 'axios';\n\nimport './book.css';\nimport logo from '../../logo_transparent_background.webp';\nimport 'react-calendar/dist/Calendar.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronLeft} from '@fortawesome/free-solid-svg-icons';\n\nfunction Book(props){\n    const [fadeToggle, setFadeToggle] = useState(false),\n        [bookDate, setBookDate] = useState(new Date()),\n        [timeArray, setTimeArray] = useState(['11:00 am', '11:30 am', '12:00 pm', '12:30 pm', '1:00 pm', '1:30 pm', '2:00 pm', '2:30 pm', '3:00 pm', '3:30 pm', '4:00 pm', '4:30 pm', '5:00 pm']),\n        [bookTime, setBookTime] = useState('')\n\n    const today = new Date()\n\n    useEffect(() => {\n        window.scrollTo(0,0)\n        getAvailableTimes(bookDate)\n        const timer = setTimeout(() => {\n            setFadeToggle(true)\n          }, 100);\n          return () => clearTimeout(timer)\n    }, [])\n\n    const getAvailableTimes = (d) => {\n        setBookTime('')\n\n        const date = `${d}`\n        const format = date.split(' ').filter((e, i) => i < 4).join(' ')\n\n        if(d <= today){\n            return setTimeArray([])\n        }\n\n        axios.get(`/api/booking/time/?date=${format}`)\n        .then(res => {\n            console.log(res.data)\n            const defaultTime = ['11:00 am', '11:30 am', '12:00 pm', '12:30 pm', '1:00 pm', '1:30 pm', '2:00 pm', '2:30 pm', '3:00 pm', '3:30 pm', '4:00 pm', '4:30 pm', '5:00 pm']\n            const bookedTimes = res.data.map(e => e.time)\n\n            const filter = defaultTime.filter(e => {\n                return !bookedTimes.includes(e)\n            }) \n            setTimeArray(filter)\n        }).catch(err => console.log(err))\n    }\n\n    const determineDisabled = (a, d, v) => {\n        return d.getDay() === 0 || d.getDay() === 6 \n    }\n\n    const timeMap = timeArray.map((element, index) => {\n        return (\n            <button onClick={() => setBookTime(element)} className={element === bookTime ? 'focus-book-date' : 'book-date-buttons'} key={index}>{element}</button>\n        )\n    })\n\n    const convertDate = () => {\n        const stringDate = `${bookDate}`\n\n        return stringDate.split(' ').filter((e, i) => i < 4).join(' ')\n    }\n\n    const handleNext = (date, time) => {\n        props.history.push({pathname: '/booking/confirm', state: {date: date, time: time}})\n    }\n\n    return (\n        <div className={fadeToggle === false ? 'no-book' : 'book-component'}>\n            <div className='booking-form'>\n                <div className='booking-form-header'>\n                    <nav>\n                        <p>Schedule Online</p>\n                        <p \n                        onClick={() => props.history.goBack()}\n                        id='booking-back-arrow'><FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon> Back</p>\n                    </nav>\n                    <img src={logo} alt='Elevate Logo' /> \n                </div>\n                <div id='booking-calendar'>\n                    <Calender\n                    className='calendar'\n                    onChange={(date) => setBookDate(date)}\n                    value={bookDate}\n                    onClickDay={(value) => getAvailableTimes(value)}\n                    minDetail='year'\n                    tileDisabled={({activeStartDate, date, view}) => determineDisabled(activeStartDate, date, view)}\n                    />\n                </div>\n                <div className='booking-times'>\n                    <div className='times-list'>\n                        {timeMap.length === 0 ? ('No available spots. Please try a different date.') : (timeMap)}\n                    </div>\n                    <div className='confirm-booking-section'>\n                        <p className='confirm-title'>Let's Meet!</p>\n                        <p className='confirm-free'>1 hr | Free Service</p>\n                        <hr></hr>\n                        {bookTime.length !== 0 ? \n                        <p className='confirm-date-display'>{convertDate()} | {bookTime}</p> \n                        :\n                        <p className='confirm-select-time'>Please select a time!</p>}\n                        <button disabled={bookDate.length === 0 || bookTime.length === 0 ? 'disabled' : null} onClick={() => handleNext(convertDate(), bookTime)} className='confirm-next-button'>Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Book","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/ConfirmBooking/ConfirmBooking.js",["73"],"import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\n\nimport './confirmBooking.css'\nimport logo from '../../logo_transparent_background.webp'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faChevronLeft} from '@fortawesome/free-solid-svg-icons'\n\nfunction ConfirmBooking(props){\n    const [fadeToggle, setFadeToggle] = useState(false),\n        [name, setName] = useState(''),\n        [email, setEmail] = useState(''),\n        [phone, setPhone] = useState(''),\n        [about, setAbout] = useState(''),\n        [successToggle, setSuccessToggle] = useState(true),\n        [conDay, setConDay] = useState(''),\n        [conDayNum, setConDayNum] = useState(''),\n        [conMonth, setConMonth] = useState('')\n\n    const convertDate = () => {\n        const {date} = props.location.state\n\n        const day = date.split(' ').filter((e, i) => i === 0).join(' ')\n        const dayNum = date.split(' ').filter((e, i) => i === 2).join(' ').split('').filter((el,index) => (el !== '0' || index !== 0)).join('')\n\n        const month = date.split(' ').filter((e, i) => i === 1).join(' ')\n\n        setConDay(day)\n        setConDayNum(dayNum)\n        setConMonth(month)\n    }\n\n    useEffect(() => {\n        window.scrollTo(0,0)\n        if(props.location.state !== undefined){\n            convertDate()\n        }\n        const timer = setTimeout(() => {\n            setFadeToggle(true)\n          }, 100);\n          return () => clearTimeout(timer)\n    }, [])\n\n    const handleConfirm = () => {\n        const {date, time} = props.location.state\n        console.log(date,date.length, time)\n        axios.post('/api/mail/booking', {name, email, phone, about, date, time})\n        .then(res => {\n            setSuccessToggle(true)\n            const {date, time, user_email} = res.data.scheduled\n            console.log(res.data.scheduled)\n            axios.post('/api/mail/confirmation', {date, time, user_email})\n            .then((confirmEmail) => console.log(confirmEmail.data.response))\n            .catch(err => console.log(err))\n\n            console.log(res.data.response)\n        }).catch(err => console.log(err))\n    }\n\n    return (\n        <div className={fadeToggle === true ? 'confirm-booking-component' : 'no-booking'}>\n            {props.location.state === undefined ? \n            <p className='confirm-here-text'>Please go back <b onClick={() => props.history.push('/booking')}>here</b> to select a date and time!</p>\n            :\n            <div className='confirm-booking-form'>\n                <div className='booking-form-header'>\n                    <nav>\n                        <p>Add Your Info</p>\n                        <p \n                        onClick={() => props.history.goBack()}\n                        id='booking-back-arrow'><FontAwesomeIcon icon={faChevronLeft}></FontAwesomeIcon> Back</p>\n                    </nav>\n                    <img src={logo} alt='Elevate Logo' /> \n                </div>\n                <section className='booking-main-section'>\n                    <div className='booking-input-section'>\n                        <p id='header-about-text'>Tell us a bit about yourself.</p>\n                        <nav>\n                            <label>Name*</label>\n                            <input \n                            value={name}\n                            id='confirm-name-input' \n                            onChange={(e) => setName(e.target.value)} />\n                        </nav>\n                        <nav>\n                            <label>Email*</label>\n                            <input \n                            value={email}\n                            id='confirm-email-input' \n                            onChange={(e) => setEmail(e.target.value)} />\n                        </nav>\n                        <nav>\n                            <label>Phone Number</label>\n                            <input \n                            value={phone}\n                            id='confirm-phone-input' \n                            onChange={(e) => setPhone(e.target.value)} />\n                        </nav>\n                        <nav>\n                            <label>Add a Message</label>\n                            <textarea \n                            value={about}\n                            id='confirm-message-input' \n                            onChange={(e) => setAbout(e.target.value)} />\n                        </nav>\n                    </div>\n                    <div className='confirm-booking-section'>\n                        <p className='confirm-title'>Let's Meet!</p>\n                        <p className='confirm-free'>1 hr | Free Service</p>\n                        <hr></hr>\n                        <p className='confirm-date-display'>{`${props.location.state.date} | ${props.location.state.time}`}</p> \n                        {name.length === 0 || email.length === 0 ? <p id='confirm-missed-info'>Please fill in the required info!</p> : null}\n                        <button \n                        disabled={name.length === 0 || email.length === 0 ? 'disabled' : null}\n                        onClick={handleConfirm}\n                        className='confirm-next-button'>Confirm</button>\n                    </div>\n                    \n                </section>\n            </div>}\n            <div className={successToggle === false ? 'no-success' : 'confirm-success'}>\n                <nav className='success-wrapper'>\n                </nav>\n                <div className='success-main'>\n                    <div id='success-header'>\n                        <p>Success! You are now booked.</p>\n                        <p>A confirmation email is on its way to you.</p>\n                        <hr></hr>\n                    </div>\n                    <div className='success-submit'>\n                        <nav id='success-date'> \n                            <p>{conDayNum}</p>\n                            <p>{conMonth}</p>\n                             <hr></hr>\n                             <p>{conDay} {props.location.state !== undefined ? props.location.state.time : null}</p>\n                         </nav>\n                        <hr></hr>\n                        <nav id='success-submit-button'>\n                            <p>Let's Meet!</p>\n                            <p>1hr | Free Service</p>\n                            <button onClick={() => props.history.push('/home')}>Home</button>\n                        </nav>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ConfirmBooking","/Users/ammonburgi/personal-projects/elevate-solar/src/Components/PageNotFound/PageNotFound.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":16,"nodeType":"80","messageId":"81","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"82","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"83","line":19,"column":10,"nodeType":"80","messageId":"81","endLine":19,"endColumn":18},{"ruleId":"78","severity":1,"message":"84","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":17},{"ruleId":"78","severity":1,"message":"85","line":26,"column":28,"nodeType":"80","messageId":"81","endLine":26,"endColumn":47},{"ruleId":"78","severity":1,"message":"86","line":2,"column":9,"nodeType":"80","messageId":"81","endLine":2,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":27,"column":8,"nodeType":"89","endLine":27,"endColumn":10,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":42,"column":8,"nodeType":"89","endLine":42,"endColumn":10,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'aboutErr' is assigned a value but never used.","'solarIcon' is defined but never used.","'setFirstStreetError' is assigned a value but never used.","'Helmet' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bookDate' and 'getAvailableTimes'. Either include them or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has missing dependencies: 'convertDate' and 'props.location.state'. Either include them or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [bookDate, getAvailableTimes]",{"range":"101","text":"102"},"Update the dependencies array to be: [convertDate, props.location.state]",{"range":"103","text":"104"},[1044,1046],"[bookDate, getAvailableTimes]",[1481,1483],"[convertDate, props.location.state]"]